{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ErrorPage from 'next/error';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { Container, Header, Layout, PostBody, PostHeader, PostTitle } from '../../components';\nimport { getPostBySlug, getAllPosts, markdownToHtml } from '../../lib';\nexport default function Post({\n  post,\n  morePosts\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404\n    });\n  }\n\n  return __jsx(Layout, null, __jsx(Container, null, __jsx(Header, null), router.isFallback ? __jsx(PostTitle, null, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"mb-32\"\n  }, __jsx(Head, null, __jsx(\"title\", null, post.title, \" | Next.js Blog Example with Markdown\")), __jsx(PostHeader, {\n    title: post.title // coverImage={post.coverImage}\n    ,\n    coverImage: require('../../public/fortTrumbull.jpg'),\n    date: post.date\n  }), __jsx(PostBody, {\n    content: post.content\n  })))));\n}\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, ['title', 'date', 'slug', 'content', 'ogImage', 'coverImage']);\n  const content = await markdownToHtml(post.content || '');\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":null,"metadata":{},"sourceType":"module"}