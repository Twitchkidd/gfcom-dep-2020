{"ast":null,"code":"(window.webpackJsonp = window.webpackJsonp || []).push([[5], {\n  RXBc: function RXBc(e, t, a) {\n    \"use strict\";\n\n    a.r(t), a.d(t, \"pageQuery\", function () {\n      return p;\n    });\n\n    var n = a(\"q1tI\"),\n        l = a.n(n),\n        r = a(\"vOnD\"),\n        c = a(\"E2cJ\"),\n        i = a(\"Kvkj\"),\n        o = r.c.div.withConfig({\n      displayName: \"pages__NavMainWrapper\",\n      componentId: \"sc-1nbib7n-0\"\n    })([\"display:flex;flex-direction:row;width:100%;height:calc(100vh - 96px - 17.125rem);\"]),\n        m = r.c.div.withConfig({\n      displayName: \"pages__MainWrapper\",\n      componentId: \"sc-1nbib7n-1\"\n    })([\"height:100%;flex:1;overflow:scroll;padding:1rem 1rem 1rem 2.5rem;\"]),\n        u = function u(e) {\n      var t = e.children;\n      return Object(c.b)() ? t : null;\n    };\n\n    t[\"default\"] = function (e) {\n      var t = e.data,\n          a = e.location,\n          r = t.site.siteMetadata.title,\n          p = Object(n.useState)(1),\n          d = p[0],\n          s = p[1];\n      return l.a.createElement(i.d, {\n        location: a,\n        title: r\n      }, l.a.createElement(i.g, {\n        title: \"All posts\"\n      }), l.a.createElement(i.a, {\n        location: a\n      }), l.a.createElement(o, null, l.a.createElement(c.a, {\n        state: [d, s]\n      }, l.a.createElement(i.e, null), l.a.createElement(m, null, l.a.createElement(u, null, l.a.createElement(i.f, null)), l.a.createElement(u, null, l.a.createElement(i.b, {\n        data: t\n      })), l.a.createElement(u, null, l.a.createElement(i.c, null)), l.a.createElement(u, null, l.a.createElement(\"p\", null, \"Dog!\"))))));\n    };\n\n    var p = \"173509685\";\n  }\n}]);","map":{"version":3,"sources":["webpack:///src/pages/index.js"],"names":["NavMainWrapper","styled","div","MainWrapper","Panel","children","usePanelState","data","location","siteTitle","site","siteMetadata","title","index","setIndex","useState","state","SiteIndex","pageQuery"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { Tabs, usePanelState } from \"@bumaga/tabs\";\nimport {\n  Bio,\n  BlogList,\n  Coffee,\n  Layout,\n  Nav,\n  Running,\n  SEO,\n} from \"../components\";\n\nconst NavMainWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: calc(100vh - 96px - 17.125rem);\n`;\n\nconst MainWrapper = styled.div`\n  height: 100%;\n  flex: 1;\n  overflow: scroll;\n  padding: 1rem 1rem 1rem 2.5rem;\n`;\n\nconst Panel = ({ children }) => {\n  const isActive = usePanelState();\n  return isActive ? children : null;\n};\n\nconst SiteIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const [index, setIndex] = useState(1);\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio location={location} />\n      <NavMainWrapper>\n        <Tabs state={[index, setIndex]}>\n          <Nav />\n          <MainWrapper>\n            <Panel>\n              <Running />\n            </Panel>\n            <Panel>\n              <BlogList data={data} />\n            </Panel>\n            <Panel>\n              <Coffee />\n            </Panel>\n            <Panel>\n              <p>Dog!</p>\n            </Panel>\n          </MainWrapper>\n        </Tabs>\n      </NavMainWrapper>\n    </Layout>\n  );\n};\n\nexport default SiteIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}