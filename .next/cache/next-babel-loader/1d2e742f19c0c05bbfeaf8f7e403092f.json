{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Code/projects/gareth/gfcom/pages/posts/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ErrorPage from 'next/error';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { Container, Layout, PostBody, PostHeader, PostTitle } from '../../components';\nimport { metadata } from '../../siteMetadata';\nimport { getPostBySlug, getAllPosts, markdownToHtml } from '../../lib';\nconst Article = styled.article.withConfig({\n  displayName: \"slug__Article\",\n  componentId: \"sc-1yw6hio-0\"\n})([\"margin-bottom:8rem;\"]);\nconst {\n  siteTitle\n} = metadata;\nexport default function Post({\n  post,\n  morePosts\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, router.isFallback ? __jsx(PostTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(Article, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, post.title, \" | \", siteTitle)), __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverImage ? require(`../../public/${post.coverImage}`) : require('../../public/fortTrumbull.jpg'),\n    date: post.date,\n    description: post.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }), __jsx(PostBody, {\n    content: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }\n  })))));\n}\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, ['title', 'description', 'date', 'slug', 'content', 'ogImage', 'coverImage']);\n  const content = await markdownToHtml(post.content || '');\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/gareth/Code/projects/gareth/gfcom/pages/posts/[slug].js"],"names":["ErrorPage","Head","useRouter","styled","Container","Layout","PostBody","PostHeader","PostTitle","metadata","getPostBySlug","getAllPosts","markdownToHtml","Article","article","siteTitle","Post","post","morePosts","router","isFallback","slug","title","coverImage","require","date","description","content","getStaticProps","params","props","getStaticPaths","posts","paths","map","fallback"],"mappings":"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","sourcesContent":["import ErrorPage from 'next/error';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport {\n\tContainer,\n\tLayout,\n\tPostBody,\n\tPostHeader,\n\tPostTitle,\n} from '../../components';\nimport { metadata } from '../../siteMetadata';\nimport { getPostBySlug, getAllPosts, markdownToHtml } from '../../lib';\n\nconst Article = styled.article`\n\tmargin-bottom: 8rem;\n`;\n\nconst { siteTitle } = metadata;\n\nexport default function Post({ post, morePosts }) {\n\tconst router = useRouter();\n\tif (!router.isFallback && !post?.slug) {\n\t\treturn <ErrorPage statusCode={404} />;\n\t}\n\treturn (\n\t\t<Layout>\n\t\t\t<Container>\n\t\t\t\t{router.isFallback ? (\n\t\t\t\t\t<PostTitle>Loadingâ€¦</PostTitle>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Article>\n\t\t\t\t\t\t\t<Head>\n\t\t\t\t\t\t\t\t<title>\n\t\t\t\t\t\t\t\t\t{post.title} | {siteTitle}\n\t\t\t\t\t\t\t\t</title>\n\t\t\t\t\t\t\t\t{/* <meta property='og:image' content={post.ogImage.url} /> */}\n\t\t\t\t\t\t\t</Head>\n\t\t\t\t\t\t\t<PostHeader\n\t\t\t\t\t\t\t\ttitle={post.title}\n\t\t\t\t\t\t\t\tcoverImage={\n\t\t\t\t\t\t\t\t\tpost.coverImage\n\t\t\t\t\t\t\t\t\t\t? require(`../../public/${post.coverImage}`)\n\t\t\t\t\t\t\t\t\t\t: require('../../public/fortTrumbull.jpg')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdate={post.date}\n\t\t\t\t\t\t\t\tdescription={post.description}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PostBody content={post.content} />\n\t\t\t\t\t\t</Article>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</Layout>\n\t);\n}\n\nexport async function getStaticProps({ params }) {\n\tconst post = getPostBySlug(params.slug, [\n\t\t'title',\n\t\t'description',\n\t\t'date',\n\t\t'slug',\n\t\t'content',\n\t\t'ogImage',\n\t\t'coverImage',\n\t]);\n\tconst content = await markdownToHtml(post.content || '');\n\n\treturn {\n\t\tprops: {\n\t\t\tpost: {\n\t\t\t\t...post,\n\t\t\t\tcontent,\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport async function getStaticPaths() {\n\tconst posts = getAllPosts(['slug']);\n\n\treturn {\n\t\tpaths: posts.map(post => {\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\tslug: post.slug,\n\t\t\t\t},\n\t\t\t};\n\t\t}),\n\t\tfallback: false,\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}