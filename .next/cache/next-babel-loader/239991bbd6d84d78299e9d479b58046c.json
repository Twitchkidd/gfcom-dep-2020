{"ast":null,"code":"import fs from 'fs';\nimport { join } from 'path';\nimport matter from 'gray-matter';\nconst postsDirectory = join(process.cwd(), '_posts');\nexport const getPostSlugs = () => {\n  return fs.readdirSync(postsDirectory);\n};\nexport const getPostBySlug = (slug, fields = []) => {\n  const realSlug = slug.replace(/\\.md$/, '');\n  const fullPath = join(postsDirectory, `${realSlug}.md`);\n  const fileContents = fs.readFileSync(fullPath, 'utf8');\n  const {\n    data,\n    content\n  } = matter(fileContents);\n  const items = {}; // Ensure only the minimal needed data is exposed\n\n  fields.forEach(field => {\n    if (field === 'slug') {\n      items[field] = realSlug;\n    }\n\n    if (field === 'content') {\n      items[field] = content;\n    }\n\n    if (data[field]) {\n      items[field] = data[field];\n    }\n  });\n  return items;\n};\nexport const getAllPosts = (fields = []) => {\n  const slugs = getPostSlugs();\n  const posts = slugs.map(slug => getPostBySlug(slug, fields)) // sort posts by date in descending order\n  .sort((post1, post2) => post1.date > post2.date ? '-1' : '1');\n  return posts;\n};","map":{"version":3,"sources":["/Users/gareth/Code/projects/gareth/gfcom/lib/api.js"],"names":["fs","join","matter","postsDirectory","process","cwd","getPostSlugs","readdirSync","getPostBySlug","slug","fields","realSlug","replace","fullPath","fileContents","readFileSync","data","content","items","forEach","field","getAllPosts","slugs","posts","map","sort","post1","post2","date"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,MAAMC,cAAc,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAR,EAAD,EAAgB,QAAhB,CAA3B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AACjC,SAAON,EAAE,CAACO,WAAH,CAAeJ,cAAf,CAAP;AACA,CAFM;AAIP,OAAO,MAAMK,aAAa,GAAG,CAACC,IAAD,EAAOC,MAAM,GAAG,EAAhB,KAAuB;AACnD,QAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAjB;AACA,QAAMC,QAAQ,GAAGZ,IAAI,CAACE,cAAD,EAAkB,GAAEQ,QAAS,KAA7B,CAArB;AACA,QAAMG,YAAY,GAAGd,EAAE,CAACe,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAArB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBf,MAAM,CAACY,YAAD,CAAhC;AAEA,QAAMI,KAAK,GAAG,EAAd,CANmD,CAQnD;;AACAR,EAAAA,MAAM,CAACS,OAAP,CAAeC,KAAK,IAAI;AACvB,QAAIA,KAAK,KAAK,MAAd,EAAsB;AACrBF,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeT,QAAf;AACA;;AACD,QAAIS,KAAK,KAAK,SAAd,EAAyB;AACxBF,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeH,OAAf;AACA;;AAED,QAAID,IAAI,CAACI,KAAD,CAAR,EAAiB;AAChBF,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeJ,IAAI,CAACI,KAAD,CAAnB;AACA;AACD,GAXD;AAaA,SAAOF,KAAP;AACA,CAvBM;AAyBP,OAAO,MAAMG,WAAW,GAAG,CAACX,MAAM,GAAG,EAAV,KAAiB;AAC3C,QAAMY,KAAK,GAAGhB,YAAY,EAA1B;AACA,QAAMiB,KAAK,GAAGD,KAAK,CACjBE,GADY,CACRf,IAAI,IAAID,aAAa,CAACC,IAAD,EAAOC,MAAP,CADb,EAEb;AAFa,GAGZe,IAHY,CAGP,CAACC,KAAD,EAAQC,KAAR,KAAmBD,KAAK,CAACE,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,IAA1B,GAAiC,GAH7C,CAAd;AAIA,SAAOL,KAAP;AACA,CAPM","sourcesContent":["import fs from 'fs';\nimport { join } from 'path';\nimport matter from 'gray-matter';\n\nconst postsDirectory = join(process.cwd(), '_posts');\n\nexport const getPostSlugs = () => {\n\treturn fs.readdirSync(postsDirectory);\n};\n\nexport const getPostBySlug = (slug, fields = []) => {\n\tconst realSlug = slug.replace(/\\.md$/, '');\n\tconst fullPath = join(postsDirectory, `${realSlug}.md`);\n\tconst fileContents = fs.readFileSync(fullPath, 'utf8');\n\tconst { data, content } = matter(fileContents);\n\n\tconst items = {};\n\n\t// Ensure only the minimal needed data is exposed\n\tfields.forEach(field => {\n\t\tif (field === 'slug') {\n\t\t\titems[field] = realSlug;\n\t\t}\n\t\tif (field === 'content') {\n\t\t\titems[field] = content;\n\t\t}\n\n\t\tif (data[field]) {\n\t\t\titems[field] = data[field];\n\t\t}\n\t});\n\n\treturn items;\n};\n\nexport const getAllPosts = (fields = []) => {\n\tconst slugs = getPostSlugs();\n\tconst posts = slugs\n\t\t.map(slug => getPostBySlug(slug, fields))\n\t\t// sort posts by date in descending order\n\t\t.sort((post1, post2) => (post1.date > post2.date ? '-1' : '1'));\n\treturn posts;\n};\n"]},"metadata":{},"sourceType":"module"}